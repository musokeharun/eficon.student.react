{"ast":null,"code":"var isUndefined = function isUndefined(value) {\n  return value === undefined;\n};\n\nvar isNull = function isNull(value) {\n  return value === null;\n};\n\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\n\nvar isObject = function isObject(value) {\n  return value === Object(value);\n};\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\n\nvar isDate = function isDate(value) {\n  return value instanceof Date;\n};\n\nvar isBlob = function isBlob(value) {\n  return value && typeof value.size === 'number' && typeof value.type === 'string' && typeof value.slice === 'function';\n};\n\nvar isFile = function isFile(value) {\n  return isBlob(value) && typeof value.name === 'string' && (typeof value.lastModifiedDate === 'object' || typeof value.lastModified === 'number');\n};\n\nvar serialize = function serialize(obj, cfg, fd, pre) {\n  cfg = cfg || {};\n  cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;\n  cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds) ? false : cfg.nullsAsUndefineds;\n  cfg.booleansAsIntegers = isUndefined(cfg.booleansAsIntegers) ? false : cfg.booleansAsIntegers;\n  cfg.allowEmptyArrays = isUndefined(cfg.allowEmptyArrays) ? false : cfg.allowEmptyArrays;\n  fd = fd || new FormData();\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach(function (value, index) {\n        var key = pre + '[' + (cfg.indices ? index : '') + ']';\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {\n    Object.keys(obj).forEach(function (prop) {\n      var value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      var key = pre ? pre + '[' + prop + ']' : prop;\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n};\n\nmodule.exports = {\n  serialize: serialize\n};","map":{"version":3,"sources":["/home/haruna/eficon.apps/student.eficon/node_modules/object-to-formdata/dist/index.module.js"],"names":["isUndefined","value","undefined","isNull","isBoolean","isObject","Object","isArray","Array","isDate","Date","isBlob","size","type","slice","isFile","name","lastModifiedDate","lastModified","serialize","obj","cfg","fd","pre","indices","nullsAsUndefineds","booleansAsIntegers","allowEmptyArrays","FormData","append","length","forEach","index","key","toISOString","keys","prop","lastIndexOf","substring","module","exports"],"mappings":"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","sourcesContent":["const isUndefined = (value) => value === undefined;\n\nconst isNull = (value) => value === null;\n\nconst isBoolean = (value) => typeof value === 'boolean';\n\nconst isObject = (value) => value === Object(value);\n\nconst isArray = (value) => Array.isArray(value);\n\nconst isDate = (value) => value instanceof Date;\n\nconst isBlob = (value) =>\n  value &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.slice === 'function';\n\nconst isFile = (value) =>\n  isBlob(value) &&\n  typeof value.name === 'string' &&\n  (typeof value.lastModifiedDate === 'object' ||\n    typeof value.lastModified === 'number');\n\nconst serialize = (obj, cfg, fd, pre) => {\n  cfg = cfg || {};\n\n  cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;\n\n  cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds)\n    ? false\n    : cfg.nullsAsUndefineds;\n\n  cfg.booleansAsIntegers = isUndefined(cfg.booleansAsIntegers)\n    ? false\n    : cfg.booleansAsIntegers;\n\n  cfg.allowEmptyArrays = isUndefined(cfg.allowEmptyArrays)\n    ? false\n    : cfg.allowEmptyArrays;\n\n  fd = fd || new FormData();\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        const key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {\n    Object.keys(obj).forEach((prop) => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre ? pre + '[' + prop + ']' : prop;\n\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n};\n\nmodule.exports = {\n  serialize,\n};\n"]},"metadata":{},"sourceType":"script"}