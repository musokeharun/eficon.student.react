{"ast":null,"code":"var _jsxFileName = \"/home/haruna/eficon.apps/student.eficon/src/components/register/RegisterDocuments.js\";\nimport React from 'react';\nimport Joi from \"joi-browser\";\nimport { v1 } from \"uuid\";\nimport Form from \"../common/form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport FileInput from \"../common/fileinput\";\nimport Input from \"../common/input\";\nimport $ from \"jquery\";\nimport { toast } from \"react-toastify\";\nimport { serialize } from \"object-to-formdata\";\nimport httpService from \"../../services/httpService\";\nimport { studentApi } from \"../../config.json\";\nimport is from \"is_js\";\nimport { removePreloader } from \"../../App\";\n\nclass RegisterDocuments extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputs: [{\n        key: v1(),\n        file: null,\n        title: \"\"\n      }]\n    };\n    this.schema = {\n      title: Joi.string().required().label(\"Title\"),\n      key: Joi.string().required().label(\"Key\"),\n      file: Joi.any().required()\n    };\n\n    this.validate = (data, schema) => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(data, schema, options);\n      if (!error) return null;\n      const errors = [];\n\n      for (let item of error.details) errors.push(item.message);\n\n      return errors;\n    };\n\n    this.handleAddField = () => {\n      let newField = {\n        key: v1(),\n        file: null,\n        title: \"\"\n      };\n      const state = { ...this.state\n      };\n      state.inputs.push(newField);\n      this.setState(state);\n    };\n\n    this.handleFileChange = e => {\n      const {\n        name\n      } = e.currentTarget;\n      const state = { ...this.state\n      };\n      let index = state.inputs.findIndex(i => i.key === name);\n      state.inputs[index].file = e.currentTarget.files[0];\n      this.setState(state);\n    };\n\n    this.handleRemove = (e, title) => {\n      let currentTarget = e.currentTarget;\n      $(currentTarget).closest(\"div.row\").animate({\n        width: 'toggle',\n        opacity: '0.8'\n      }, \"slow\");\n      const state = { ...this.state\n      };\n      state.inputs = state.inputs.filter(i => i.title !== title);\n      this.setState(state);\n    };\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      const state = { ...this.state\n      };\n      let index = state.inputs.findIndex(i => i.key === name);\n      state.inputs[index].title = value;\n      this.setState(state);\n    };\n\n    this.doSubmit = () => {\n      const {\n        inputs\n      } = this.state;\n      const {\n        email\n      } = this.props;\n      console.log(inputs);\n      inputs.forEach(input => {\n        let errors = this.validate(input, this.schema);\n\n        if (errors) {\n          console.log(errors);\n          errors.forEach(err => toast(err, {\n            type: \"error\"\n          }));\n          return;\n        } else {\n          try {\n            const formData = serialize({ ...input,\n              email\n            });\n            let {\n              data: res\n            } = httpService.post(studentApi + \"/data\", formData); // this.props.history.push(\"/register/\");\n\n            console.log(res);\n          } catch (ex) {\n            let res = ex.response.data;\n\n            if (ex.response && ex.response.status === 400) {\n              const errors = { ...this.state.errors,\n                ...res\n              };\n              this.setState({\n                errors\n              });\n              return;\n            }\n\n            if (is.object(res)) {\n              Object.getOwnPropertyNames(res).forEach(prop => {\n                toast(`${prop}:${res[prop]}`, {\n                  type: \"error\"\n                });\n              });\n            } else if (is.string(res)) {\n              toast(res, {\n                type: \"error\"\n              });\n            }\n          } finally {\n            removePreloader();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      inputs\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"my-3 text-dark fw-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Documents\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, inputs.length && inputs.map((input, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row g-0 mb-3 mt-1 position-relative\",\n      key: input.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 my-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Title\",\n      name: input.key,\n      onChange: e => this.handleInputChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 my-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FileInput, {\n      name: input.key,\n      handleChange: e => this.handleFileChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: e => this.handleRemove(e, input.title),\n      className: \"position-absolute top-0 end-0 text-danger right-0 w-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      className: \"fa-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.handleAddField(),\n      className: \"btn btn-link btn-rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Add Field\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-bs-toggle\": \"collapse\",\n      \"data-bs-target\": \"#moreFields\",\n      type: \"button\",\n      className: \"btn btn-outline-warning btn-lg\",\n      onClick: e => this.doSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"Continue \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowRight,\n      className: \"mx-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 34\n      }\n    }))));\n  }\n\n}\n\nexport default RegisterDocuments;","map":{"version":3,"sources":["/home/haruna/eficon.apps/student.eficon/src/components/register/RegisterDocuments.js"],"names":["React","Joi","v1","Form","FontAwesomeIcon","faArrowRight","faTimesCircle","FileInput","Input","$","toast","serialize","httpService","studentApi","is","removePreloader","RegisterDocuments","state","inputs","key","file","title","schema","string","required","label","any","validate","data","options","abortEarly","error","errors","item","details","push","message","handleAddField","newField","setState","handleFileChange","e","name","currentTarget","index","findIndex","i","files","handleRemove","closest","animate","width","opacity","filter","handleInputChange","value","doSubmit","email","props","console","log","forEach","input","err","type","formData","res","post","ex","response","status","object","Object","getOwnPropertyNames","prop","render","handleSubmit","length","map","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Joi from \"joi-browser\";\nimport {v1} from \"uuid\";\nimport Form from \"../common/form\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowRight, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport FileInput from \"../common/fileinput\";\nimport Input from \"../common/input\";\nimport $ from \"jquery\";\nimport {toast} from \"react-toastify\";\nimport {serialize} from \"object-to-formdata\";\nimport httpService from \"../../services/httpService\";\nimport {studentApi} from \"../../config.json\";\nimport is from \"is_js\";\nimport {removePreloader} from \"../../App\";\n\n\nclass RegisterDocuments extends Form {\n\n    state = {\n        inputs: [{key: v1(), file: null, title: \"\"}],\n    };\n\n    schema = {\n        title: Joi.string()\n            .required()\n            .label(\"Title\"),\n        key: Joi.string()\n            .required()\n            .label(\"Key\"),\n        file: Joi\n            .any()\n            .required()\n    };\n\n    validate = (data, schema) => {\n        const options = {abortEarly: false};\n        const {error} = Joi.validate(data, schema, options);\n        if (!error) return null;\n\n        const errors = [];\n        for (let item of error.details) errors.push(item.message);\n        return errors;\n    };\n\n    handleAddField = () => {\n        let newField = {key: v1(), file: null, title: \"\"};\n        const state = {...this.state};\n        state.inputs.push(newField)\n        this.setState(state);\n    }\n\n    handleFileChange = (e) => {\n        const {name} = e.currentTarget;\n        const state = {...this.state};\n\n        let index = state.inputs.findIndex(i => i.key === name);\n        state.inputs[index].file = e.currentTarget.files[0];\n        this.setState(state);\n    }\n\n    handleRemove = (e, title) => {\n        let currentTarget = e.currentTarget;\n        $(currentTarget).closest(\"div.row\").animate({width: 'toggle', opacity: '0.8'}, \"slow\");\n        const state = {...this.state};\n        state.inputs = state.inputs.filter(i => i.title !== title);\n        this.setState(state);\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.currentTarget;\n        const state = {...this.state};\n\n        let index = state.inputs.findIndex(i => i.key === name);\n        state.inputs[index].title = value;\n        this.setState(state);\n\n    }\n\n    doSubmit = () => {\n\n        const {inputs} = this.state;\n        const {email} = this.props;\n        console.log(inputs);\n\n        inputs.forEach(input => {\n            let errors = this.validate(input, this.schema);\n            if (errors) {\n                console.log(errors)\n                errors.forEach(err => toast(err, {type: \"error\"}))\n                return;\n            } else {\n                try {\n                    const formData = serialize(\n                        {...input, email},\n                    );\n                    let {data: res} = httpService.post(studentApi + \"/data\", formData);\n                    // this.props.history.push(\"/register/\");\n                    console.log(res);\n\n                } catch (ex) {\n                    let res = ex.response.data;\n                    if (ex.response && ex.response.status === 400) {\n                        const errors = {...this.state.errors, ...res};\n                        this.setState({errors});\n                        return;\n                    }\n\n                    if (is.object(res)) {\n                        Object.getOwnPropertyNames(res).forEach(prop => {\n                            toast(`${prop}:${res[prop]}`, {type: \"error\"})\n                        })\n                    } else if (is.string(res)) {\n                        toast(res, {type: \"error\"})\n                    }\n\n                } finally {\n                    removePreloader()\n                }\n\n            }\n        })\n\n    }\n\n    render() {\n\n        const {inputs} = this.state;\n\n        return (\n            <div>\n                <h1 className={\"my-3 text-dark fw-light\"}>Documents</h1>\n                <form onSubmit={this.handleSubmit}>\n\n                    {\n                        inputs.length && inputs.map((input, index) => (\n                            <div className={\"row g-0 mb-3 mt-1 position-relative\"} key={input.key}>\n                                <div className={\"col-12 my-0\"}>\n                                    <Input label={\"Title\"} name={input.key}\n                                           onChange={e => this.handleInputChange(e)}/>\n                                </div>\n                                <div className={\"col-12 my-0\"}>\n                                    <FileInput name={input.key} handleChange={e => this.handleFileChange(e)}/>\n                                </div>\n                                <span style={{cursor: \"pointer\"}} onClick={(e) => this.handleRemove(e, input.title)}\n                                      className={\"position-absolute top-0 end-0 text-danger right-0 w-auto\"}>\n                                    <FontAwesomeIcon icon={faTimesCircle} className={\"fa-2x\"}/>\n                                </span>\n                            </div>\n                        ))\n                    }\n\n                    <button type=\"button\" onClick={(e) => this.handleAddField()}\n                            className=\"btn btn-link btn-rounded\">Add Field\n                    </button>\n                    <button data-bs-toggle={\"collapse\"} data-bs-target={\"#moreFields\"} type=\"button\"\n                            className=\"btn btn-outline-warning btn-lg\" onClick={e => this.doSubmit()}>\n                        Continue <FontAwesomeIcon icon={faArrowRight} className={\"mx-2\"}/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default RegisterDocuments;"]},"metadata":{},"sourceType":"module"}