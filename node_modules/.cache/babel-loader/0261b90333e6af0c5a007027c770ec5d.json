{"ast":null,"code":"var _jsxFileName = \"/home/haruna/eficon.apps/student.eficon/src/components/register/registerDetails.js\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\n\nclass RegisterDetails extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n        name: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().email().label(\"Username\"),\n      password: Joi.string().required().min(5).label(\"Password\"),\n      name: Joi.string().required().label(\"Name\")\n    };\n\n    this.doSubmit = async () => {\n      try {} catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          };\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"name\", \"Name\"), this.renderButton(\"Register\")));\n  }\n\n}\n\nexport default RegisterDetails;","map":{"version":3,"sources":["/home/haruna/eficon.apps/student.eficon/src/components/register/registerDetails.js"],"names":["React","Joi","Form","RegisterDetails","state","data","username","password","name","errors","schema","string","required","email","label","min","doSubmit","ex","response","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,eAAN,SAA8BD,IAA9B,CAAmC;AAAA;AAAA;AAAA,SAC/BE,KAD+B,GACvB;AACJC,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,QAAQ,EAAE,EAAzB;AAA6BC,QAAAA,IAAI,EAAE;AAAnC,OADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADuB;AAAA,SAM/BC,MAN+B,GAMtB;AACLJ,MAAAA,QAAQ,EAAEL,GAAG,CAACU,MAAJ,GACLC,QADK,GAELC,KAFK,GAGLC,KAHK,CAGC,UAHD,CADL;AAKLP,MAAAA,QAAQ,EAAEN,GAAG,CAACU,MAAJ,GACLC,QADK,GAELG,GAFK,CAED,CAFC,EAGLD,KAHK,CAGC,UAHD,CALL;AASLN,MAAAA,IAAI,EAAEP,GAAG,CAACU,MAAJ,GACDC,QADC,GAEDE,KAFC,CAEK,MAFL;AATD,KANsB;;AAAA,SAoB/BE,QApB+B,GAoBpB,YAAY;AACnB,UAAI,CACH,CADD,CACE,OAAOC,EAAP,EAAW;AACT,YAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+C;AAC3C,gBAAMV,MAAM,GAAG,EAAC,GAAG,KAAKL,KAAL,CAAWK;AAAf,WAAf;AACAA,UAAAA,MAAM,CAACH,QAAP,GAAkBW,EAAE,CAACC,QAAH,CAAYb,IAA9B;AACA,eAAKe,QAAL,CAAc;AAACX,YAAAA;AAAD,WAAd;AACH;AACJ;AACJ,KA7B8B;AAAA;;AA+B/BY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CADL,EAEK,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFL,EAGK,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAHL,EAIK,KAAKC,YAAL,CAAkB,UAAlB,CAJL,CAFJ,CADJ;AAWH;;AA3C8B;;AA8CnC,eAAerB,eAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\n\nclass RegisterDetails extends Form {\n    state = {\n        data: {username: \"\", password: \"\", name: \"\"},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string()\n            .required()\n            .email()\n            .label(\"Username\"),\n        password: Joi.string()\n            .required()\n            .min(5)\n            .label(\"Password\"),\n        name: Joi.string()\n            .required()\n            .label(\"Name\")\n    };\n\n    doSubmit = async () => {\n        try {\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = {...this.state.errors};\n                errors.username = ex.response.data;\n                this.setState({errors});\n            }\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Register</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\", \"Username\")}\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\n                    {this.renderInput(\"name\", \"Name\")}\n                    {this.renderButton(\"Register\")}\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default RegisterDetails;\n"]},"metadata":{},"sourceType":"module"}